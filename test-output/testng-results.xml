<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="1" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="16212" started-at="2020-10-10T18:38:55Z" finished-at="2020-10-10T18:39:12Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="16212" started-at="2020-10-10T18:38:55Z" finished-at="2020-10-10T18:39:12Z">
      <class name="Runner.Runner">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:Runner.Runner@3d299e3]" name="beforeSuite" is-config="true" duration-ms="241" started-at="2020-10-11T00:08:55Z" finished-at="2020-10-11T00:08:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:Runner.Runner@3d299e3]" name="beforeMethod" is-config="true" duration-ms="2732" started-at="2020-10-11T00:08:55Z" finished-at="2020-10-11T00:08:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="Search(java.lang.reflect.Method)[pri:0, instance:Runner.Runner@3d299e3]" name="Search" duration-ms="11644" started-at="2020-10-11T00:08:58Z" finished-at="2020-10-11T00:09:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Runner.Runner.Search(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Runner.Runner@3d299e3]" name="afterMethod" is-config="true" duration-ms="1804" started-at="2020-10-11T00:09:10Z" finished-at="2020-10-11T00:09:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Search status=SUCCESS method=Runner.Search(java.lang.reflect.Method)[pri:0, instance:Runner.Runner@3d299e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:Runner.Runner@3d299e3]" name="afterSuite" is-config="true" duration-ms="0" started-at="2020-10-11T00:09:12Z" finished-at="2020-10-11T00:09:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Runner.Runner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
